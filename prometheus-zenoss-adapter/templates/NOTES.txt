The prometheus zenoss adapter can be accessed from within the cluster as
{{- if (.Values.service.port) and eq .Values.service.port "80" }}
    http://{{ include "prometheus-zenoss-adapter.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local/receive
{{- else }}
    http://{{ include "prometheus-zenoss-adapter.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{.Values.service.port}}/receive
{{- end}}

Run the following command to follow the {{ .Chart.Name }} logs.

    kubectl -n {{ .Release.Namespace }} logs -f \
        $(kubectl -n {{ .Release.Namespace }} get pods \
            -l app.kubernetes.io/instance={{ .Release.Name }} \
            -o jsonpath='{ .items[0].metadata.name }')

If you'd like to test your instance, you may forward the port locally:


{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "prometheus-zenoss-adapter.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "prometheus-zenoss-adapter.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "prometheus-zenoss-adapter.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "prometheus-zenoss-adapter.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl -n {{ .Release.Namespace }}  port-forward $POD_NAME 8080:80
{{- end }}
